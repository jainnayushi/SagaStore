{"ast":null,"code":"import { INC_COUNT, DEC_COUNT } from \"./constants\";\nconst initialState = {\n  number: 0,\n  name: \"My Counter\"\n};\n\nconst changeCount = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INC_COUNT:\n      return state.number + 1;\n\n    case DEC_COUNT:\n      return state.number - 1;\n\n    default:\n      return state;\n  }\n};\n\nexport default changeCount;","map":{"version":3,"names":["INC_COUNT","DEC_COUNT","initialState","number","name","changeCount","state","action","type"],"sources":["D:/Redux_learn/New folder/redux_self/src/reducer.js"],"sourcesContent":["import { INC_COUNT, DEC_COUNT } from \"./constants\";\r\nconst initialState = {\r\n    number: 0,\r\n    name: \"My Counter\",\r\n}\r\n\r\nconst changeCount = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INC_COUNT:\r\n      return state.number + 1;\r\n    case DEC_COUNT:\r\n      return state.number - 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default changeCount;\r\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,SAApB,QAAqC,aAArC;AACA,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAE,CADS;EAEjBC,IAAI,EAAE;AAFW,CAArB;;AAKA,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBJ,YAAyB;EAAA,IAAXK,MAAW;;EACpD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKR,SAAL;MACE,OAAOM,KAAK,CAACH,MAAN,GAAe,CAAtB;;IACF,KAAKF,SAAL;MACE,OAAOK,KAAK,CAACH,MAAN,GAAe,CAAtB;;IACF;MACE,OAAOG,KAAP;EANJ;AAQD,CATD;;AAWA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}