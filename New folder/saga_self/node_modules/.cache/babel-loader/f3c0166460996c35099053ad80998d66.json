{"ast":null,"code":"import { INC_COUNT, DEC_COUNT, DISPLAY } from \"./constants\";\nconst initialState = 0;\nlet name_initial = \"My Counter\";\n\nconst changeCount = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : name_initial;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INC_COUNT:\n      return state + 1;\n\n    case DEC_COUNT:\n      return state - 1;\n\n    case DISPLAY:\n      console.log(\"here action\", action);\n      console.log(\"here action.name\", action.name);\n      return action.name;\n\n    default:\n      return state;\n  }\n};\n\nexport default changeCount;","map":{"version":3,"names":["INC_COUNT","DEC_COUNT","DISPLAY","initialState","name_initial","changeCount","state","action","type","console","log","name"],"sources":["D:/Redux_learn/New folder/redux_self/src/reducer.js"],"sourcesContent":["import { INC_COUNT, DEC_COUNT, DISPLAY } from \"./constants\";\r\nconst initialState = 0;\r\nlet name_initial = \"My Counter\";\r\n\r\n\r\nconst changeCount = (state = name_initial, action) => {\r\n  switch (action.type) {\r\n    case INC_COUNT:\r\n      return state + 1;\r\n    case DEC_COUNT:\r\n      return state - 1;\r\n    case DISPLAY:\r\n      console.log(\"here action\", action);\r\n      console.log(\"here action.name\", action.name);\r\n\r\n      return action.name;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default changeCount;\r\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,SAApB,EAA+BC,OAA/B,QAA8C,aAA9C;AACA,MAAMC,YAAY,GAAG,CAArB;AACA,IAAIC,YAAY,GAAG,YAAnB;;AAGA,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBF,YAAyB;EAAA,IAAXG,MAAW;;EACpD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKR,SAAL;MACE,OAAOM,KAAK,GAAG,CAAf;;IACF,KAAKL,SAAL;MACE,OAAOK,KAAK,GAAG,CAAf;;IACF,KAAKJ,OAAL;MACEO,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,MAA3B;MACAE,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,MAAM,CAACI,IAAvC;MAEA,OAAOJ,MAAM,CAACI,IAAd;;IACF;MACE,OAAOL,KAAP;EAXJ;AAaD,CAdD;;AAgBA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}